<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Chunks' => 
    array (
      '7d61f839db431632244cf9c4038b824d' => 
      array (
        'preserve_keys' => false,
        'update_object' => false,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"gContainer","description":"","editor_type":0,"category":0,"cache_type":0,"snippet":"<?xml version=\\"1.0\\" encoding=\\"[[++modx_charset]]\\"?>\\n<urlset xmlns=\\"[[+schema]]\\">\\n[[+items]]<\\/urlset>","locked":0,"properties":"a:0:{}","static":0,"static_file":"","content":"<?xml version=\\"1.0\\" encoding=\\"[[++modx_charset]]\\"?>\\n<urlset xmlns=\\"[[+schema]]\\">\\n[[+items]]<\\/urlset>"}',
        'guid' => '169b1d84e2b3424f0caf3195697ff2d5',
        'native_key' => NULL,
        'signature' => 'c6816db6fb8551a1aceaceb69d3df2a3',
      ),
    ),
    'Snippets' => 
    array (
      '8b1188058a8c65f44ac2a7082e1b14c8' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"GoogleSiteMap","description":"New GoogleSiteMap Snippet\\u2014many times faster than Version 1, but with less options. If params are specified that depend on the old version, it will be called.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * GoogleSiteMap\\n *\\n * Builds the Google SiteMap XML.\\n * Version 2+ of GoogleSiteMap uses code by Garry Nutting of the MODX Core Team to deliver sitemaps blazingly fast.\\n *\\n * @author YJ Tso <yj@modx.com>, Garry Nutting <garry@modx.com>\\n *\\n *\\n * GoogleSiteMap is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * GoogleSiteMap is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * GoogleSiteMap; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package googlesitemap\\n *\\/\\n\\n\\/\\/ \\"300 lives of men I\'ve walked this earth and now I have no time\\"\\nini_set(\'max_execution_time\', 0);\\n\\n\\/\\/ Set cache options\\n\\/\\/ set $cacheKey prefix to be appended later\\n$cacheKey = $modx->getoption(\'cachePrefix\', $scriptProperties, \'googlesitemap\');\\n\\/\\/ subfolder of core\\/cache\\/\\n$cachePartition = $modx->getoption(\'cachePartition\', $scriptProperties, \'googlesitemap\');\\n$expires = $modx->getOption(\'cacheExpires\', $scriptProperties, 86400);\\n$options = array(\\n  xPDO::OPT_CACHE_KEY => $cachePartition,\\n);\\n\\n\\/\\/ Set context(s)\\n$context = array_filter(array_map(\'trim\', explode(\',\', $modx->getOption(\'context\', $scriptProperties, $modx->context->get(\'key\'), true))));\\n\\n\\/\\/ Hash cache key\\n$cacheKey .= \'.\' . md5($modx->toJSON(array_merge($scriptProperties, [\'context\' => $context])));\\n\\n\\/\\/ Fetch from cache\\n$output = null;\\n$output = $modx->cacheManager->get($cacheKey, $options);\\nif ($output !== null) return $output;\\n\\n\\/* Legacy Snippet handling *\\/\\n$legacyProps = $modx->getOption(\'legacyProps\', $scriptProperties, \'allowedtemplates, excludeResources, excludeChildrenOf, sortByAlias, templateFilter, itemTpl, maxDepth, startId, where\');\\n$legacyProps = array_flip(array_filter(array_map(\'trim\', explode(\',\', $legacyProps))));\\n$legacyProps = array_intersect_key($scriptProperties, $legacyProps);\\n$legacySnippet = $modx->getOption(\'legacySnippet\', $scriptProperties, \'GoogleSiteMapVersion1\');\\n\\nif (!empty($legacyProps) && $modx->getCount(\'modSnippet\', array(\'name\' => $legacySnippet))) {\\n\\n    $output = $modx->runSnippet($legacySnippet, $scriptProperties);\\n    if ($output !== null) {\\n        $modx->cacheManager->set($cacheKey, $output, $expires, $options);\\n        return $output;\\n    }\\n\\n}\\n\\n\\/* Begin new Snippet scope *\\/\\n$googleSchema = $modx->getOption(\'googleSchema\',$scriptProperties,\'http:\\/\\/www.sitemaps.org\\/schemas\\/sitemap\\/0.9\');\\n\\n\\/* Map specified filter properties to new variables for convenience *\\/\\n$filters = array();\\nif ($modx->getOption(\'hideDeleted\', $scriptProperties, true)) $filters[] =  \'s.deleted = 0\';\\nif (!$modx->getOption(\'showHidden\', $scriptProperties, false)) $filters[] = \'s.hidemenu = 0\';\\nif ($modx->getOption(\'published\', $scriptProperties, true)) $filters[] = \'s.published = 1\';\\nif ($modx->getOption(\'searchable\', $scriptProperties, true)) $filters[] = \'s.searchable = 1\';\\n\\n\\/* Defaults from legacy snippet *\\/\\n$sortBy = $modx->getOption(\'sortBy\', $scriptProperties, \'menuindex\');\\n$sortDir = $modx->getOption(\'sortDir\', $scriptProperties, \'ASC\');\\n$orderby = \'s.\' . strtolower($sortBy) . \' \' . strtoupper($sortDir);\\n\\n$containerTpl = $modx->getOption(\'containerTpl\', $scriptProperties, \'gContainer\');\\n$priorityTV = $modx->getOption(\'priorityTV\', $scriptProperties, \'\');\\n\\n\\/* Fetch TV ID if string provided *\\/\\nif (!is_numeric($priorityTV)) {\\n\\n    $c = $modx->newQuery(\'modTemplateVar\');\\n    $c->select(\'id\');\\n    $c->where(array(\'name\' => $priorityTV));\\n    $priorityTV = $modx->getValue($c->prepare());\\n\\n}\\n\\n\\/* Query by Context and set site_url \\/ site_start *\\/\\n$items = \'\';\\n\\/\\/ Set today\'s date for homepage lastmod\\n$today = date(\'Y-m-d\');\\nforeach ($context as $ctx) {\\n\\n    $siteUrl = \'\';\\n    \\/\\/ Fetch current context object for site_url\\n    $currentCtx = $modx->getContext($ctx);\\n    if ($currentCtx) {\\n        $siteUrl = $currentCtx->getOption(\'site_url\');\\n        \\/\\/ Add site_url to output\\n        $items .= \\"<url><loc>{$siteUrl}<\\/loc><lastmod>{$today}<\\/lastmod><\\/url>\\" . PHP_EOL;\\n    }\\n    if (empty($siteUrl)) {\\n        \\/\\/ We need something to build the links with, even if no context setting\\n        $siteUrl = $modx->getOption(\'site_url\', null, MODX_SITE_URL);\\n    }\\n\\n    $tablePrefix = $modx->getOption(\'table_prefix\');\\n\\n    \\/\\/ Context-specific filters\\n    $ctxFilters = $filters;\\n    $ctxFilters[] = \\"s.context_key = \'{$ctx}\'\\";\\n    if ($currentCtx) {\\n        $ctxFilters[] = \\"s.id != \'{$currentCtx->getOption(\'site_start\')}\'\\";\\n    }\\n    $criteria = implode(\' AND \', $ctxFilters);\\n    $tvQuery = \'\';\\n    if ($priorityTV) $tvQuery = \\"IFNULL(\\n        CONCAT(\'<priority>\',(\\n            SELECT value\\n            FROM \\" . $tablePrefix . \\"site_tmplvar_contentvalues\\n            USE INDEX (tv_cnt)\\n            WHERE contentid = s.id AND tmplvarid = \\" . $priorityTV . \\"\\n        ),\'<\\/priority>\'),\'\'),\\";\\n\\n    \\/\\/ Add all resources that meet criteria\\n    $stmt = $modx->query(\\"\\n        SELECT\\n    \\t    GROUP_CONCAT(\\n                \'<url>\',\\n                CONCAT(\'<loc>\\" . $siteUrl . \\"\',uri,\'<\\/loc>\'),\\n                CONCAT(\'<lastmod>\',CASE editedon WHEN 0 THEN FROM_UNIXTIME(publishedon, \'%Y-%m-%d\') ELSE FROM_UNIXTIME(editedon, \'%Y-%m-%d\') END,\'<\\/lastmod>\'),\\n                \\" . $tvQuery . \\"\\n                \'<\\/url>\'\\n                SEPARATOR \'\'\\n            ) AS node\\n        FROM \\" . $tablePrefix . \\"site_content AS s\\n        WHERE \\" . $criteria . \\"\\n        GROUP BY s.id\\n        ORDER BY \\" . $orderby . \\"\\n    \\");\\n\\n    \\/\\/ Add to output\\n    if ($stmt) {\\n        $rows = $stmt->fetchAll(PDO::FETCH_COLUMN);\\n        $items .= implode(PHP_EOL, $rows);\\n    }\\n\\n}\\n\\n\\/* get container tpl and content *\\/\\n$output = $modx->getChunk($containerTpl, array(\\n    \'schema\' => $googleSchema,\\n    \'items\' => $items,\\n));\\n\\nif ($output !== null) {\\n    $modx->cacheManager->set($cacheKey, $output, $expires, $options);\\n    return $output;\\n} else {\\n    $modx->log(modX::LOG_LEVEL_WARN, \'GoogleSiteMap could not generate nor fetch a sitemap.\');\\n}","locked":0,"properties":"a:15:{s:11:\\"cachePrefix\\";a:7:{s:4:\\"name\\";s:11:\\"cachePrefix\\";s:4:\\"desc\\";s:25:\\"prop_gsm.cacheprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:13:\\"googlesitemap\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"cachePartition\\";a:7:{s:4:\\"name\\";s:14:\\"cachePartition\\";s:4:\\"desc\\";s:28:\\"prop_gsm.cachepartition_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:13:\\"googlesitemap\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"cacheExpires\\";a:7:{s:4:\\"name\\";s:12:\\"cacheExpires\\";s:4:\\"desc\\";s:26:\\"prop_gsm.cacheexpires_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:5:\\"86400\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"context\\";a:7:{s:4:\\"name\\";s:7:\\"context\\";s:4:\\"desc\\";s:21:\\"prop_gsm.context_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"hideDeleted\\";a:7:{s:4:\\"name\\";s:11:\\"hideDeleted\\";s:4:\\"desc\\";s:25:\\"prop_gsm.hidedeleted_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"showHidden\\";a:7:{s:4:\\"name\\";s:10:\\"showHidden\\";s:4:\\"desc\\";s:24:\\"prop_gsm.showhidden_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"googleSchema\\";a:7:{s:4:\\"name\\";s:12:\\"googleSchema\\";s:4:\\"desc\\";s:26:\\"prop_gsm.googleschema_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:43:\\"http:\\/\\/www.sitemaps.org\\/schemas\\/sitemap\\/0.9\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"published\\";a:7:{s:4:\\"name\\";s:9:\\"published\\";s:4:\\"desc\\";s:23:\\"prop_gsm.published_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"searchable\\";a:7:{s:4:\\"name\\";s:10:\\"searchable\\";s:4:\\"desc\\";s:24:\\"prop_gsm.searchable_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortBy\\";a:7:{s:4:\\"name\\";s:6:\\"sortBy\\";s:4:\\"desc\\";s:20:\\"prop_gsm.sortby_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:9:\\"menuindex\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortDir\\";a:7:{s:4:\\"name\\";s:7:\\"sortDir\\";s:4:\\"desc\\";s:21:\\"prop_gsm.sortdir_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"containerTpl\\";a:7:{s:4:\\"name\\";s:12:\\"containerTpl\\";s:4:\\"desc\\";s:26:\\"prop_gsm.containertpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:10:\\"gContainer\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"priorityTV\\";a:7:{s:4:\\"name\\";s:10:\\"priorityTV\\";s:4:\\"desc\\";s:24:\\"prop_gsm.prioritytv_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"legacyProps\\";a:7:{s:4:\\"name\\";s:11:\\"legacyProps\\";s:4:\\"desc\\";s:25:\\"prop_gsm.legacyprops_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:117:\\"allowedtemplates, excludeResources, excludeChildrenOf, sortByAlias, templateFilter, itemTpl, maxDepth, startId, where\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"legacySnippet\\";a:7:{s:4:\\"name\\";s:13:\\"legacySnippet\\";s:4:\\"desc\\";s:27:\\"prop_gsm.legacysnippet_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:21:\\"GoogleSiteMapVersion1\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * GoogleSiteMap\\n *\\n * Builds the Google SiteMap XML.\\n * Version 2+ of GoogleSiteMap uses code by Garry Nutting of the MODX Core Team to deliver sitemaps blazingly fast.\\n *\\n * @author YJ Tso <yj@modx.com>, Garry Nutting <garry@modx.com>\\n *\\n *\\n * GoogleSiteMap is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * GoogleSiteMap is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * GoogleSiteMap; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package googlesitemap\\n *\\/\\n\\n\\/\\/ \\"300 lives of men I\'ve walked this earth and now I have no time\\"\\nini_set(\'max_execution_time\', 0);\\n\\n\\/\\/ Set cache options\\n\\/\\/ set $cacheKey prefix to be appended later\\n$cacheKey = $modx->getoption(\'cachePrefix\', $scriptProperties, \'googlesitemap\');\\n\\/\\/ subfolder of core\\/cache\\/\\n$cachePartition = $modx->getoption(\'cachePartition\', $scriptProperties, \'googlesitemap\');\\n$expires = $modx->getOption(\'cacheExpires\', $scriptProperties, 86400);\\n$options = array(\\n  xPDO::OPT_CACHE_KEY => $cachePartition,\\n);\\n\\n\\/\\/ Set context(s)\\n$context = array_filter(array_map(\'trim\', explode(\',\', $modx->getOption(\'context\', $scriptProperties, $modx->context->get(\'key\'), true))));\\n\\n\\/\\/ Hash cache key\\n$cacheKey .= \'.\' . md5($modx->toJSON(array_merge($scriptProperties, [\'context\' => $context])));\\n\\n\\/\\/ Fetch from cache\\n$output = null;\\n$output = $modx->cacheManager->get($cacheKey, $options);\\nif ($output !== null) return $output;\\n\\n\\/* Legacy Snippet handling *\\/\\n$legacyProps = $modx->getOption(\'legacyProps\', $scriptProperties, \'allowedtemplates, excludeResources, excludeChildrenOf, sortByAlias, templateFilter, itemTpl, maxDepth, startId, where\');\\n$legacyProps = array_flip(array_filter(array_map(\'trim\', explode(\',\', $legacyProps))));\\n$legacyProps = array_intersect_key($scriptProperties, $legacyProps);\\n$legacySnippet = $modx->getOption(\'legacySnippet\', $scriptProperties, \'GoogleSiteMapVersion1\');\\n\\nif (!empty($legacyProps) && $modx->getCount(\'modSnippet\', array(\'name\' => $legacySnippet))) {\\n\\n    $output = $modx->runSnippet($legacySnippet, $scriptProperties);\\n    if ($output !== null) {\\n        $modx->cacheManager->set($cacheKey, $output, $expires, $options);\\n        return $output;\\n    }\\n\\n}\\n\\n\\/* Begin new Snippet scope *\\/\\n$googleSchema = $modx->getOption(\'googleSchema\',$scriptProperties,\'http:\\/\\/www.sitemaps.org\\/schemas\\/sitemap\\/0.9\');\\n\\n\\/* Map specified filter properties to new variables for convenience *\\/\\n$filters = array();\\nif ($modx->getOption(\'hideDeleted\', $scriptProperties, true)) $filters[] =  \'s.deleted = 0\';\\nif (!$modx->getOption(\'showHidden\', $scriptProperties, false)) $filters[] = \'s.hidemenu = 0\';\\nif ($modx->getOption(\'published\', $scriptProperties, true)) $filters[] = \'s.published = 1\';\\nif ($modx->getOption(\'searchable\', $scriptProperties, true)) $filters[] = \'s.searchable = 1\';\\n\\n\\/* Defaults from legacy snippet *\\/\\n$sortBy = $modx->getOption(\'sortBy\', $scriptProperties, \'menuindex\');\\n$sortDir = $modx->getOption(\'sortDir\', $scriptProperties, \'ASC\');\\n$orderby = \'s.\' . strtolower($sortBy) . \' \' . strtoupper($sortDir);\\n\\n$containerTpl = $modx->getOption(\'containerTpl\', $scriptProperties, \'gContainer\');\\n$priorityTV = $modx->getOption(\'priorityTV\', $scriptProperties, \'\');\\n\\n\\/* Fetch TV ID if string provided *\\/\\nif (!is_numeric($priorityTV)) {\\n\\n    $c = $modx->newQuery(\'modTemplateVar\');\\n    $c->select(\'id\');\\n    $c->where(array(\'name\' => $priorityTV));\\n    $priorityTV = $modx->getValue($c->prepare());\\n\\n}\\n\\n\\/* Query by Context and set site_url \\/ site_start *\\/\\n$items = \'\';\\n\\/\\/ Set today\'s date for homepage lastmod\\n$today = date(\'Y-m-d\');\\nforeach ($context as $ctx) {\\n\\n    $siteUrl = \'\';\\n    \\/\\/ Fetch current context object for site_url\\n    $currentCtx = $modx->getContext($ctx);\\n    if ($currentCtx) {\\n        $siteUrl = $currentCtx->getOption(\'site_url\');\\n        \\/\\/ Add site_url to output\\n        $items .= \\"<url><loc>{$siteUrl}<\\/loc><lastmod>{$today}<\\/lastmod><\\/url>\\" . PHP_EOL;\\n    }\\n    if (empty($siteUrl)) {\\n        \\/\\/ We need something to build the links with, even if no context setting\\n        $siteUrl = $modx->getOption(\'site_url\', null, MODX_SITE_URL);\\n    }\\n\\n    $tablePrefix = $modx->getOption(\'table_prefix\');\\n\\n    \\/\\/ Context-specific filters\\n    $ctxFilters = $filters;\\n    $ctxFilters[] = \\"s.context_key = \'{$ctx}\'\\";\\n    if ($currentCtx) {\\n        $ctxFilters[] = \\"s.id != \'{$currentCtx->getOption(\'site_start\')}\'\\";\\n    }\\n    $criteria = implode(\' AND \', $ctxFilters);\\n    $tvQuery = \'\';\\n    if ($priorityTV) $tvQuery = \\"IFNULL(\\n        CONCAT(\'<priority>\',(\\n            SELECT value\\n            FROM \\" . $tablePrefix . \\"site_tmplvar_contentvalues\\n            USE INDEX (tv_cnt)\\n            WHERE contentid = s.id AND tmplvarid = \\" . $priorityTV . \\"\\n        ),\'<\\/priority>\'),\'\'),\\";\\n\\n    \\/\\/ Add all resources that meet criteria\\n    $stmt = $modx->query(\\"\\n        SELECT\\n    \\t    GROUP_CONCAT(\\n                \'<url>\',\\n                CONCAT(\'<loc>\\" . $siteUrl . \\"\',uri,\'<\\/loc>\'),\\n                CONCAT(\'<lastmod>\',CASE editedon WHEN 0 THEN FROM_UNIXTIME(publishedon, \'%Y-%m-%d\') ELSE FROM_UNIXTIME(editedon, \'%Y-%m-%d\') END,\'<\\/lastmod>\'),\\n                \\" . $tvQuery . \\"\\n                \'<\\/url>\'\\n                SEPARATOR \'\'\\n            ) AS node\\n        FROM \\" . $tablePrefix . \\"site_content AS s\\n        WHERE \\" . $criteria . \\"\\n        GROUP BY s.id\\n        ORDER BY \\" . $orderby . \\"\\n    \\");\\n\\n    \\/\\/ Add to output\\n    if ($stmt) {\\n        $rows = $stmt->fetchAll(PDO::FETCH_COLUMN);\\n        $items .= implode(PHP_EOL, $rows);\\n    }\\n\\n}\\n\\n\\/* get container tpl and content *\\/\\n$output = $modx->getChunk($containerTpl, array(\\n    \'schema\' => $googleSchema,\\n    \'items\' => $items,\\n));\\n\\nif ($output !== null) {\\n    $modx->cacheManager->set($cacheKey, $output, $expires, $options);\\n    return $output;\\n} else {\\n    $modx->log(modX::LOG_LEVEL_WARN, \'GoogleSiteMap could not generate nor fetch a sitemap.\');\\n}"}',
        'guid' => 'ee2e871e8627177afb85af17f7084482',
        'native_key' => NULL,
        'signature' => '6bedb69d4cdaab433cb9b3d21f19d6aa',
      ),
      '369d421a4dd351cac81d8e9fbc7735db' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"GoogleSiteMapVersion1","description":"Old GoogleSiteMap Snippet\\u2014many times SLOWER than new version, but with more options. Beware potential server errors trying to execute this Snippet.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * GoogleSiteMap (Version 1x)\\n *\\n * Copyright 2009-2010 by Shaun McCormick <shaun@modx.com>\\n *\\n * - Based on Michal Till\'s MODx Evolution GoogleSiteMap_XML snippet\\n *\\n * GoogleSiteMap is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * GoogleSiteMap is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * GoogleSiteMap; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package googlesitemap\\n *\\/\\n\\/**\\n * GoogleSiteMap for MODx Revolution\\n *\\n * @package googlesitemap\\n *\\/\\nrequire_once $modx->getOption(\'googlesitemap.core_path\',null,$modx->getOption(\'core_path\').\'components\\/googlesitemap\\/\').\'model\\/googlesitemap\\/googlesitemap.class.php\';\\n$GoogleSiteMap = new GoogleSiteMap($modx,$scriptProperties);\\n\\n\\/* setup default properties *\\/\\n$googleSchema = $modx->getOption(\'googleSchema\',$scriptProperties,\'http:\\/\\/www.sitemaps.org\\/schemas\\/sitemap\\/0.9\');\\n$containerTpl = $modx->getOption(\'containerTpl\',$scriptProperties,\'gContainer\');\\n$startId = (int)$modx->getOption(\'startId\',$scriptProperties,0);\\n\\n\\/* get container tpl and content *\\/\\nreturn $GoogleSiteMap->getChunk($containerTpl,array(\\n    \'schema\' => $googleSchema,\\n    \'items\' => $GoogleSiteMap->run($startId),\\n));","locked":0,"properties":"a:19:{s:16:\\"allowedtemplates\\";a:7:{s:4:\\"name\\";s:16:\\"allowedtemplates\\";s:4:\\"desc\\";s:30:\\"prop_gsm.allowedtemplates_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"context\\";a:7:{s:4:\\"name\\";s:7:\\"context\\";s:4:\\"desc\\";s:21:\\"prop_gsm.context_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"maxDepth\\";a:7:{s:4:\\"name\\";s:8:\\"maxDepth\\";s:4:\\"desc\\";s:22:\\"prop_gsm.maxdepth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"hideDeleted\\";a:7:{s:4:\\"name\\";s:11:\\"hideDeleted\\";s:4:\\"desc\\";s:25:\\"prop_gsm.hidedeleted_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"showHidden\\";a:7:{s:4:\\"name\\";s:10:\\"showHidden\\";s:4:\\"desc\\";s:24:\\"prop_gsm.showhidden_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"googleSchema\\";a:7:{s:4:\\"name\\";s:12:\\"googleSchema\\";s:4:\\"desc\\";s:26:\\"prop_gsm.googleschema_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:43:\\"http:\\/\\/www.sitemaps.org\\/schemas\\/sitemap\\/0.9\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"published\\";a:7:{s:4:\\"name\\";s:9:\\"published\\";s:4:\\"desc\\";s:23:\\"prop_gsm.published_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"searchable\\";a:7:{s:4:\\"name\\";s:10:\\"searchable\\";s:4:\\"desc\\";s:24:\\"prop_gsm.searchable_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"excludeResources\\";a:7:{s:4:\\"name\\";s:16:\\"excludeResources\\";s:4:\\"desc\\";s:30:\\"prop_gsm.excluderesources_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"excludeChildrenOf\\";a:7:{s:4:\\"name\\";s:17:\\"excludeChildrenOf\\";s:4:\\"desc\\";s:31:\\"prop_gsm.excludechildrenof_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortBy\\";a:7:{s:4:\\"name\\";s:6:\\"sortBy\\";s:4:\\"desc\\";s:20:\\"prop_gsm.sortby_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:9:\\"menuindex\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"sortByAlias\\";a:7:{s:4:\\"name\\";s:11:\\"sortByAlias\\";s:4:\\"desc\\";s:25:\\"prop_gsm.sortbyalias_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"modResource\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortDir\\";a:7:{s:4:\\"name\\";s:7:\\"sortDir\\";s:4:\\"desc\\";s:21:\\"prop_gsm.sortdir_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"templateFilter\\";a:7:{s:4:\\"name\\";s:14:\\"templateFilter\\";s:4:\\"desc\\";s:28:\\"prop_gsm.templatefilter_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:2:\\"id\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"itemTpl\\";a:7:{s:4:\\"name\\";s:7:\\"itemTpl\\";s:4:\\"desc\\";s:21:\\"prop_gsm.itemtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:5:\\"gItem\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"containerTpl\\";a:7:{s:4:\\"name\\";s:12:\\"containerTpl\\";s:4:\\"desc\\";s:26:\\"prop_gsm.containertpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:10:\\"gContainer\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"startId\\";a:7:{s:4:\\"name\\";s:7:\\"startId\\";s:4:\\"desc\\";s:21:\\"prop_gsm.startid_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"where\\";a:7:{s:4:\\"name\\";s:5:\\"where\\";s:4:\\"desc\\";s:19:\\"prop_gsm.where_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"priorityTV\\";a:7:{s:4:\\"name\\";s:10:\\"priorityTV\\";s:4:\\"desc\\";s:24:\\"prop_gsm.prioritytv_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * GoogleSiteMap (Version 1x)\\n *\\n * Copyright 2009-2010 by Shaun McCormick <shaun@modx.com>\\n *\\n * - Based on Michal Till\'s MODx Evolution GoogleSiteMap_XML snippet\\n *\\n * GoogleSiteMap is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * GoogleSiteMap is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * GoogleSiteMap; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package googlesitemap\\n *\\/\\n\\/**\\n * GoogleSiteMap for MODx Revolution\\n *\\n * @package googlesitemap\\n *\\/\\nrequire_once $modx->getOption(\'googlesitemap.core_path\',null,$modx->getOption(\'core_path\').\'components\\/googlesitemap\\/\').\'model\\/googlesitemap\\/googlesitemap.class.php\';\\n$GoogleSiteMap = new GoogleSiteMap($modx,$scriptProperties);\\n\\n\\/* setup default properties *\\/\\n$googleSchema = $modx->getOption(\'googleSchema\',$scriptProperties,\'http:\\/\\/www.sitemaps.org\\/schemas\\/sitemap\\/0.9\');\\n$containerTpl = $modx->getOption(\'containerTpl\',$scriptProperties,\'gContainer\');\\n$startId = (int)$modx->getOption(\'startId\',$scriptProperties,0);\\n\\n\\/* get container tpl and content *\\/\\nreturn $GoogleSiteMap->getChunk($containerTpl,array(\\n    \'schema\' => $googleSchema,\\n    \'items\' => $GoogleSiteMap->run($startId),\\n));"}',
        'guid' => 'f07b52b10b36fe28d276aad9204a9dfc',
        'native_key' => NULL,
        'signature' => '9c2fb92b2f5f46233f9c4becadff58bc',
      ),
    ),
    'Plugins' => 
    array (
      '2216754a3bfe8220645c2be38617ebbb' => 
      array (
        'unique_key' => 'name',
        'preserve_keys' => false,
        'update_object' => true,
        'related_objects' => 
        array (
          'PluginEvents' => 
          array (
            '1a9eba057bd5b7880c8a4ab3a48b724f' => 
            array (
              'preserve_keys' => true,
              'update_object' => false,
              'unique_key' => 
              array (
                0 => 'pluginid',
                1 => 'event',
              ),
              'class' => 'modPluginEvent',
              'object' => '{"pluginid":0,"event":"OnSiteRefresh","priority":0,"propertyset":0}',
              'guid' => '1ece879a56506d949fe5d3f56d7abb37',
              'native_key' => 
              array (
                0 => 0,
                1 => 'OnSiteRefresh',
              ),
              'signature' => '9c50cd3d3701418464cc4bad1a978152',
            ),
          ),
        ),
        'related_object_attributes' => 
        array (
          'PluginEvents' => 
          array (
            'preserve_keys' => true,
            'update_object' => false,
            'unique_key' => 
            array (
              0 => 'pluginid',
              1 => 'event',
            ),
          ),
        ),
        'class' => 'modPlugin',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"GSMCacheManager","description":"","editor_type":0,"category":0,"cache_type":0,"plugincode":"\\/**\\n * GSMCacheManager\\n *\\n * Clears the Google SiteMap cache partition.\\n * Version 2+ of GoogleSiteMap uses code by Garry Nutting of the MODX Core Team to deliver sitemaps blazingly fast.\\n *\\n * @author YJ Tso <yj@modx.com>, Garry Nutting <garry@modx.com>\\n *\\n *\\n * GSMCacheManager is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * GSMCacheManager is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * GSMCacheManager; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package googlesitemap\\n *\\/\\n\\n\\/\\/ In case the wrong event is enabled\\nif ($modx->event->name !== \'OnSiteRefresh\') return;\\n\\/\\/ Set cache options\\n\\/\\/ subfolder of core\\/cache\\/\\n$cachePartition = $modx->getoption(\'cachePartition\', $scriptProperties, $modx->getOption(\'googlesitemap.cache_partition\', null, \'googlesitemap\'));\\n$options = array(\\n  xPDO::OPT_CACHE_KEY => $cachePartition,\\n);\\n\\n\\/\\/ Clean cache\\n$modx->cacheManager->clean($options);","locked":0,"properties":"a:1:{s:14:\\"cachePartition\\";a:7:{s:4:\\"name\\";s:14:\\"cachePartition\\";s:4:\\"desc\\";s:44:\\"googlesitemap.gsmcachemanager.cachePartition\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:13:\\"googlesitemap\\";s:7:\\"lexicon\\";s:24:\\"googlesitemap:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","disabled":0,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * GSMCacheManager\\n *\\n * Clears the Google SiteMap cache partition.\\n * Version 2+ of GoogleSiteMap uses code by Garry Nutting of the MODX Core Team to deliver sitemaps blazingly fast.\\n *\\n * @author YJ Tso <yj@modx.com>, Garry Nutting <garry@modx.com>\\n *\\n *\\n * GSMCacheManager is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * GSMCacheManager is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * GSMCacheManager; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package googlesitemap\\n *\\/\\n\\n\\/\\/ In case the wrong event is enabled\\nif ($modx->event->name !== \'OnSiteRefresh\') return;\\n\\/\\/ Set cache options\\n\\/\\/ subfolder of core\\/cache\\/\\n$cachePartition = $modx->getoption(\'cachePartition\', $scriptProperties, $modx->getOption(\'googlesitemap.cache_partition\', null, \'googlesitemap\'));\\n$options = array(\\n  xPDO::OPT_CACHE_KEY => $cachePartition,\\n);\\n\\n\\/\\/ Clean cache\\n$modx->cacheManager->clean($options);"}',
        'guid' => '9bfa5854e9654b224df434af7f1f87c1',
        'native_key' => NULL,
        'signature' => '65c697dcaca051fcd4fa21a43a8d3ef4',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Children' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 
      array (
        0 => 'parent',
        1 => 'category',
      ),
    ),
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => false,
      'unique_key' => 'name',
    ),
    'Templates' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'templatename',
    ),
    'TemplateVars' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Plugins' => 
    array (
      'unique_key' => 'name',
      'preserve_keys' => false,
      'update_object' => true,
      'related_objects' => true,
      'related_object_attributes' => 
      array (
        'PluginEvents' => 
        array (
          'preserve_keys' => true,
          'update_object' => false,
          'unique_key' => 
          array (
            0 => 'pluginid',
            1 => 'event',
          ),
        ),
      ),
    ),
  ),
  'namespace' => 'googlesitemap',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"googlesitemap-2.1.2-pl\\/modCategory\\/97d5487609cb5b0775d4018355389992\\/0\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"googlesitemap"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'a3725eaf6e05a3e1c09e674c72576426',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '97d5487609cb5b0775d4018355389992',
  'native_key' => NULL,
  'object' => '{"id":null,"parent":0,"category":"GoogleSiteMap","rank":0}',
);